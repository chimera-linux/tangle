/***
  SPDX-License-Identifier: LGPL-2.1-or-later

  systemd is free software; you can redistribute it and/or modify it
  under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation; either version 2.1 of the License, or
  (at your option) any later version.
***/

{
global:
        sd_event_default;
        sd_event_new;
        sd_event_ref;
        sd_event_unref;
        sd_event_add_io;
        sd_event_add_time;
        sd_event_add_signal;
        sd_event_add_child;
        sd_event_add_defer;
        sd_event_add_post;
        sd_event_add_exit;
        sd_event_prepare;
        sd_event_wait;
        sd_event_dispatch;
        sd_event_run;
        sd_event_loop;
        sd_event_exit;
        sd_event_now;
        sd_event_get_fd;
        sd_event_get_state;
        sd_event_get_tid;
        sd_event_get_exit_code;
        sd_event_set_watchdog;
        sd_event_get_watchdog;
        sd_event_source_ref;
        sd_event_source_unref;
        sd_event_source_get_event;
        sd_event_source_get_userdata;
        sd_event_source_set_userdata;
        sd_event_source_set_description;
        sd_event_source_get_description;
        sd_event_source_set_prepare;
        sd_event_source_get_pending;
        sd_event_source_get_priority;
        sd_event_source_set_priority;
        sd_event_source_get_enabled;
        sd_event_source_set_enabled;
        sd_event_source_get_io_fd;
        sd_event_source_set_io_fd;
        sd_event_source_get_io_events;
        sd_event_source_set_io_events;
        sd_event_source_get_io_revents;
        sd_event_source_get_time;
        sd_event_source_set_time;
        sd_event_source_set_time_accuracy;
        sd_event_source_get_time_accuracy;
        sd_event_source_get_time_clock;
        sd_event_source_get_signal;
        sd_event_source_get_child_pid;
        sd_event_get_iteration;
        sd_event_source_get_io_fd_own;
        sd_event_source_set_io_fd_own;
        sd_event_add_inotify;
        sd_event_source_get_inotify_mask;
        sd_event_source_set_destroy_callback;
        sd_event_source_get_destroy_callback;
        sd_event_source_get_floating;
        sd_event_source_set_floating;
        sd_event_source_disable_unref;
        sd_event_add_child_pidfd;
        sd_event_source_get_child_pidfd;
        sd_event_source_get_child_pidfd_own;
        sd_event_source_set_child_pidfd_own;
        sd_event_source_get_child_process_own;
        sd_event_source_set_child_process_own;
        sd_event_source_send_child_signal;
        sd_event_add_time_relative;
        sd_event_source_set_time_relative;
        sd_event_source_get_exit_on_failure;
        sd_event_source_set_exit_on_failure;
        sd_event_source_set_ratelimit;
        sd_event_source_get_ratelimit;
        sd_event_source_is_ratelimited;
        sd_event_add_inotify_fd;
        sd_event_source_set_ratelimit_expire_callback;
        sd_event_set_signal_exit;
        sd_event_add_memory_pressure;
        sd_event_source_set_memory_pressure_type;
        sd_event_source_set_memory_pressure_period;
        sd_event_trim_memory;
        sd_event_source_get_inotify_path;
        /* could provide this, but basu already does, so we should not conflict:
        sd_id128_to_string;
        sd_id128_from_string;
        sd_id128_randomize;
        sd_id128_get_machine;
        sd_id128_get_boot;
        sd_id128_get_boot_app_specific;
        sd_id128_get_machine_app_specific;
        sd_id128_to_uuid_string;
        sd_id128_string_equal;
        sd_id128_get_app_specific;*/
local:
       *;
};
